[{"/Users/joao/Desktop/Projetos/front/src/index.tsx":"1","/Users/joao/Desktop/Projetos/front/src/reportWebVitals.ts":"2","/Users/joao/Desktop/Projetos/front/src/App.tsx":"3","/Users/joao/Desktop/Projetos/front/src/routes/index.tsx":"4","/Users/joao/Desktop/Projetos/front/src/pages/Dashboard/index.tsx":"5","/Users/joao/Desktop/Projetos/front/src/styles/global.ts":"6","/Users/joao/Desktop/Projetos/front/src/pages/Dashboard/styles.ts":"7","/Users/joao/Desktop/Projetos/front/src/services/api.ts":"8","/Users/joao/Desktop/Projetos/front/src/pages/Create/index.tsx":"9","/Users/joao/Desktop/Projetos/front/src/components/Fields/index.tsx":"10","/Users/joao/Desktop/Projetos/front/src/components/Fields/styles.ts":"11","/Users/joao/Desktop/Projetos/front/src/pages/Edit/index.tsx":"12"},{"size":479,"mtime":1608828413587,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608825074239,"results":"15","hashOfConfig":"16"},{"size":323,"mtime":1608828581867,"results":"17","hashOfConfig":"14"},{"size":436,"mtime":1609344361870,"results":"18","hashOfConfig":"14"},{"size":1956,"mtime":1609344966693,"results":"19","hashOfConfig":"14"},{"size":291,"mtime":1608828844304,"results":"20","hashOfConfig":"14"},{"size":590,"mtime":1609337253936,"results":"21","hashOfConfig":"14"},{"size":121,"mtime":1609253067106,"results":"22","hashOfConfig":"14"},{"size":245,"mtime":1609340724529,"results":"23","hashOfConfig":"14"},{"size":2680,"mtime":1609365015654,"results":"24","hashOfConfig":"14"},{"size":122,"mtime":1609279591844,"results":"25","hashOfConfig":"14"},{"size":761,"mtime":1609360027632,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"105mjum",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1f6fzts",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"29"},"/Users/joao/Desktop/Projetos/front/src/index.tsx",[],["55","56","57","58","59"],"/Users/joao/Desktop/Projetos/front/src/reportWebVitals.ts",["60"],"/Users/joao/Desktop/Projetos/front/src/App.tsx",[],"/Users/joao/Desktop/Projetos/front/src/routes/index.tsx",[],"/Users/joao/Desktop/Projetos/front/src/pages/Dashboard/index.tsx",[],"/Users/joao/Desktop/Projetos/front/src/styles/global.ts",[],"/Users/joao/Desktop/Projetos/front/src/pages/Dashboard/styles.ts",[],"/Users/joao/Desktop/Projetos/front/src/services/api.ts",[],"/Users/joao/Desktop/Projetos/front/src/pages/Create/index.tsx",[],"/Users/joao/Desktop/Projetos/front/src/components/Fields/index.tsx",["61"],"/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { FieldsContainer, Field } from './styles';\n\ninterface MethodProps {\n  method: string;\n\n  specific?:\n    | {\n        _id: string;\n        product: {\n          name: string;\n        };\n        quantity: number;\n        price: number;\n        client: {\n          name: string;\n        };\n      }\n    | undefined;\n}\n\nconst Fields: React.FC<MethodProps> = ({ specific, method }) => {\n  const history = useHistory();\n  const [product, setProduct] = useState<string | undefined>('');\n  const [quantity, setQuantity] = useState<number | undefined>();\n  const [price, setPrice] = useState<number | undefined>();\n  const [client, setClient] = useState<string | undefined>('');\n\n  useEffect(() => {\n    setProduct(specific?.product.name);\n    setQuantity(specific?.quantity);\n    setPrice(specific?.price);\n    setClient(specific?.client.name);\n  }, [specific]);\n\n  async function handleSubmit() {\n    const data = {\n      product: {\n        name: product,\n      },\n      quantity,\n      price,\n      client: {\n        name: client,\n      },\n    };\n    if (method === 'POST') {\n      await api.post('stocks', data);\n      alert('Sucessfully Created');\n      history.push('/');\n    } else if (method === 'PUT') {\n      await api.put(`/stocks/${specific?._id}`, data);\n    }\n  }\n\n  return (\n    <FieldsContainer>\n      <Field>\n        <label htmlFor=\"product_name\">\n          Produto\n          <input\n            type=\"text\"\n            id=\"product\"\n            value={product}\n            onChange={e => setProduct(e.target.value)}\n          />\n        </label>\n      </Field>\n      <Field>\n        <label htmlFor=\"quantity\">\n          Quantidade\n          <input\n            type=\"number\"\n            id=\"quantity\"\n            value={quantity}\n            onChange={e => setQuantity(Number(e.target.value))}\n          />\n        </label>\n      </Field>\n      <Field>\n        <label htmlFor=\"price\">\n          Pre√ßo\n          <input\n            type=\"number\"\n            id=\"price\"\n            onChange={e => setPrice(Number(e.target.value))}\n            value={price}\n          />\n        </label>\n      </Field>\n      <Field>\n        <label htmlFor=\"client\">\n          Cliente\n          <input\n            type=\"text\"\n            id=\"client\"\n            onChange={e => setClient(e.target.value)}\n            value={client}\n          />\n        </label>\n      </Field>\n      <button type=\"button\" onClick={handleSubmit}>\n        Enviar\n      </button>\n    </FieldsContainer>\n  );\n};\n\nexport default Fields;\n","/Users/joao/Desktop/Projetos/front/src/components/Fields/styles.ts",[],["62","63","64","65","66"],"/Users/joao/Desktop/Projetos/front/src/pages/Edit/index.tsx",["67"],"import React, { useEffect, useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport Fields from '../../components/Fields';\nimport api from '../../services/api';\n\ninterface StockParam {\n  id: string;\n}\ninterface Stock {\n  _id: string;\n  product: {\n    name: string;\n  };\n  quantity: number;\n  price: number;\n  client: {\n    name: string;\n  };\n}\n\nconst Edit: React.FC = () => {\n  const { params } = useRouteMatch<StockParam>();\n  const { id } = params;\n  const [data, setData] = useState<Stock>();\n\n  useEffect(() => {\n    api.get(`/stocks/${id}`).then(response => {\n      setData(response.data);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1>Edit</h1>\n      <Fields method=\"PUT\" specific={data} />\n    </>\n  );\n};\n\nexport default Edit;\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":25,"nodeType":"80","messageId":"81","endLine":3,"endColumn":57},{"ruleId":"82","severity":1,"message":"83","line":52,"column":7,"nodeType":"84","messageId":"85","endLine":52,"endColumn":35},{"ruleId":"68","replacedBy":"86"},{"ruleId":"70","replacedBy":"87"},{"ruleId":"72","replacedBy":"88"},{"ruleId":"74","replacedBy":"89"},{"ruleId":"76","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":30,"column":6,"nodeType":"93","endLine":30,"endColumn":8,"suggestions":"94"},"lines-around-directive",["95"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-alert","Unexpected alert.","CallExpression","unexpected",["95"],[],[],[],[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["96"],"padding-line-between-statements",{"desc":"97","fix":"98"},"Update the dependencies array to be: [id]",{"range":"99","text":"100"},[633,635],"[id]"]